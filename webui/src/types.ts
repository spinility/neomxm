// Auto-generated by sketch.dev/cmd/go2ts.go
// DO NOT EDIT. This file is automatically generated.

export interface ExternalMessage {
	message_type: string;
	body: any;
	text_content: string;
}

export interface ToolCall {
	name: string;
	input: string;
	tool_call_id: string;
	result_message?: AgentMessage | null;
	args?: string;
	result?: string;
}

export interface GitCommit {
	hash: string;
	subject: string;
	body: string;
	pushed_branch?: string;
}

export interface Usage {
	input_tokens: number;
	cache_creation_input_tokens: number;
	cache_read_input_tokens: number;
	output_tokens: number;
	cost_usd: number;
}

export interface AgentMessage {
	type: CodingAgentMessageType;
	end_of_turn: boolean;
	content: string;
	external_message?: ExternalMessage | null;
	tool_name?: string;
	input?: string;
	tool_result?: string;
	tool_error?: boolean;
	tool_call_id?: string;
	tool_calls?: ToolCall[] | null;
	toolResponses?: AgentMessage[] | null;
	commits?: (GitCommit | null)[] | null;
	timestamp: string;
	conversation_id: string;
	parent_conversation_id?: string | null;
	usage?: Usage | null;
	start_time?: string | null;
	end_time?: string | null;
	elapsed?: Duration | null;
	turnDuration?: Duration | null;
	hide_output?: boolean;
	todo_content?: string | null;
	display?: any;
	idx: number;
}

export interface CumulativeUsage {
	start_time: string;
	messages: number;
	input_tokens: number;
	output_tokens: number;
	cache_read_input_tokens: number;
	cache_creation_input_tokens: number;
	total_cost_usd: number;
	tool_uses: { [key: string]: number } | null;
}

export interface Port {
	proto: string;
	port: number;
	process: string;
	pid: number;
}

export interface State {
	state_version: number;
	message_count: number;
	total_usage?: CumulativeUsage | null;
	initial_commit: string;
	slug?: string;
	branch_name?: string;
	branch_prefix?: string;
	hostname: string;
	working_dir: string;
	os: string;
	git_origin?: string;
	git_username?: string;
	outstanding_llm_calls: number;
	outstanding_tool_calls: string[] | null;
	session_id: string;
	ssh_available: boolean;
	ssh_error?: string;
	in_container: boolean;
	first_message_index: number;
	agent_state?: string;
	outside_hostname?: string;
	inside_hostname?: string;
	outside_os?: string;
	inside_os?: string;
	outside_working_dir?: string;
	inside_working_dir?: string;
	todo_content?: string;
	skaband_addr?: string;
	link_to_github?: boolean;
	ssh_connection_string?: string;
	diff_lines_added: number;
	diff_lines_removed: number;
	open_ports?: Port[] | null;
	token_context_window?: number;
	model?: string;
	session_ended?: boolean;
	can_send_messages?: boolean;
	ended_at?: string;
}

export interface TodoItem {
	id: string;
	task: string;
	status: string;
}

export interface TodoList {
	items: TodoItem[] | null;
}

export interface Remote {
	name: string;
	url: string;
	display_name: string;
	is_github: boolean;
}

export interface GitPushInfoResponse {
	hash: string;
	subject: string;
	remotes: Remote[] | null;
}

export interface GitPushRequest {
	remote: string;
	branch: string;
	commit: string;
	dry_run: boolean;
	force: boolean;
}

export interface GitPushResponse {
	success: boolean;
	output: string;
	dry_run: boolean;
	error?: string;
}

export interface DiffFile {
	path: string;
	old_path: string;
	old_mode: string;
	new_mode: string;
	old_hash: string;
	new_hash: string;
	status: string;
	additions: number;
	deletions: number;
}

export interface GitLogEntry {
	hash: string;
	refs: string[] | null;
	subject: string;
}

export type CodingAgentMessageType = 'user' | 'agent' | 'error' | 'budget' | 'tool' | 'commit' | 'auto' | 'port' | 'compact' | 'slug' | 'external';

export type Duration = number;
